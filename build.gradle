buildscript {
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}

plugins {
  id "java"
  id "eclipse"
  id "idea"
}

apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral() // tilesFX & Medusa (gauges)
  jcenter() // fontawesomeFX
}

dependencies {
  compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

signing {
  sign configurations.archives
}

artifacts {
  archives jar, javadocJar, sourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      //snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        //authentication(userName: ossrhUsername, password: ossrhPassword)
      //}

      pom.project {
        name 'highfrequencyrobots'
        packaging 'jar'
        // optionally artifactId can be defined here 
        description 'A way for wifi robots and IoT devices to quickly send compressed data arrays across a network.'
        url 'http://www.flybotix.com'

        scm {
          connection 'scm:git@github.com:flybotix/highfrequencyrobots.git'
          developerConnection 'scm:git@github.com:flybotix/highfrequencyrobots.git'
          url 'scm:git@github.com:flybotix/highfrequencyrobots.git'
        }

        licenses {
          license {
            name 'GNU Public License, Version 3.0'
            url 'http://fsf.org/'
            distribution 'repo'
          }
        }

        developers {
          developer {
            id hfrdeveloper
            name hfrname
            email hfremail
          }
        }
      }
    }
  }
}

nexusStaging {
    username = ossrhUsername
    password =  ossrhPassword
//    stagingProfileId = "89ce54e2fec83"
    packageGroup = "com.flybotix" //optional if packageGroup == project.getGroup()
}
